@page "/Movies"
@using test_shit.Network
@using test_shit.Data
@inject NetworkImpl _networkImpl
@inject NavigationManager NavigationManager

<div class="mainView">
    <div class="container">
      
        <div class="row">
            @if (!_aResults.Any())
            {
                <div class="col-md-12 loadingText">
                <div class="spinner-border" role="status">
                    <span class="sr-only">Loading...</span>
                </div></div>
            }
            else
            {
                @foreach (var item in _aResults.Select((value, i) => new { i, value }))
                {
                    @if (@item.value.title != null)
                    {
                        <div class="col-md-3 favoriteMovies">
                            <div class="card mb-4 box-shadow">
                                @if (@item.value.poster_path == emptyPath || @item.value.poster_path == null)
                                {
                                    <img src="images/image1.png" style="width: 280px; height: 420px;" @onclick="@(() => ToMovieDetails2(item.value))" type="button"/>
                                    <p class="card-text">@item.value.title</p>
                                }
                                else
                                {
                                    <img src=@item.value.poster_path style="width: 280px" @onclick="@(() => ToMovieDetails2(item.value))" type="button"/>
                                    <p class="card-text">@item.value.title</p>
                                }
                            </div>
                        </div>
                    }
                }
            }
        </div>
        
        <div class="row">
            @if (!_movies.Any())
            {
            }
            else
            {
                @foreach (var item in _movies)
                {
                    @if (@item.title != null)
                    {
                        <div class="col-md-3 favoriteMovies">
                            <div class="card mb-4 box-shadow">
                                @if (@item.poster_path == emptyPath || @item.poster_path == null)
                                {
                                    <img src="images/image1.png" style="width: 280px; height: 420px;" @onclick="@(() => ToMovieDetails(item))" type="button"/>
                                    <p class="card-text">@item.title</p>
                                }
                                else
                                {
                                    <img src=@item.poster_path style="width: 280px" @onclick="@(() => ToMovieDetails(item))" type="button"/>
                                    <p class="card-text">@item.title</p>
                                }
                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
</div>

@code {
    private List<Movie> _movies = new List<Movie>();
    private string emptyPath = "https://image.tmdb.org/t/p/original";
    
    private TopRated _aMovies = new TopRated();
    private List<TopRated.Result> _aResults = new List<TopRated.Result>();
    
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _movies = await _networkImpl.getAllMovies();
            _aMovies = await _networkImpl.getMovieBasedOnGenreFromApi(80);
            _aResults = _aMovies.results;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }

        foreach (var item in _movies)
        {
            Console.WriteLine(item.poster_path + ", ");
        }
    }

    private void ToMovieDetails(Movie movie)
    {
        NavigationManager.NavigateTo($"/SelectedMovie/{movie.id}");
    }

    private void ToMovieDetails2(TopRated.Result movie)
    {
        NavigationManager.NavigateTo($"/SelectedMovie/{movie.id}");
    }
    

}